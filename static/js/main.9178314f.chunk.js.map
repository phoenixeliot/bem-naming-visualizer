{"version":3,"sources":["features/bemParts/bemPartsSlice.js","components/parseClass.js","components/ColoredBemCode.js","components/BemPartInput.js","components/BemEditor.js","components/App.js","reducers.js","index.js"],"names":["createSlice","require","partPrefixes","block","element","modifier","value","cleanPartValue","partName","undefined","trimmed","match","rearrangeValues","bemParts","bemPartsSlice","name","initialState","reducers","setBemParts","state","action","payload","Object","keys","forEach","setBemPart","actions","parseClass","text","partsRegex","unknown","parts","groups","plainParts","assign","key","generateSpans","join","ColoredBemHtmlExample","mainParts","allParts","class1","class2","className","dangerouslySetInnerHTML","__html","mapDispatchToProps","connect","html","spellCheck","onChange","e","target","el","document","createElement","innerHTML","textContent","disabled","classNames","replace","BemEditor","rootReducer","combineReducers","bemPartsReducer","store","configureStore","reducer","updateFromHash","initialBemParts","window","location","hash","slice","dispatch","addEventListener","render","getElementById"],"mappings":"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","file":"static/js/main.9178314f.chunk.js","sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst partPrefixes = {\n  block: \"\",\n  element: \"__\",\n  modifier: \"_\",\n  value: \"_\",\n};\n\nconst cleanPartValue = (partName, value) => {\n  if (partPrefixes[partName] === undefined) {\n    return value;\n  }\n  if (value == \"\") {\n    return \"\";\n  }\n  const trimmed = value.match(/_{0,2}([a-zA-Z0-9\\\\-]*)/)[1];\n  return partPrefixes[partName] + trimmed;\n};\n\nconst rearrangeValues = (bemParts) => {\n  if (bemParts[\"modifier\"] == \"\") {\n    bemParts[\"modifier\"] = bemParts[\"value\"];\n    bemParts[\"value\"] = \"\";\n  }\n};\n\nconst bemPartsSlice = createSlice({\n  name: \"bemParts\",\n  initialState: {\n    block: \"block\",\n    element: \"__element\",\n    modifier: \"_modifier\",\n    value: \"_value\",\n  },\n  reducers: {\n    setBemParts(state, action) {\n      const bemParts = action.payload;\n      Object.keys(bemParts).forEach((partName) => {\n        state[partName] = cleanPartValue(partName, bemParts[partName]);\n      });\n      rearrangeValues(state);\n    },\n    setBemPart(state, action) {\n      const { partName, value } = action.payload;\n      state[partName] = cleanPartValue(partName, value);\n      rearrangeValues(state);\n    },\n  },\n});\n\nexport const { setBemPart, setBemParts } = bemPartsSlice.actions;\nexport default bemPartsSlice.reducer;\n","const keys = [\"unknown\", \"block\", \"element\", \"modifier\", \"value\"];\n\nexport const parseClass = (text) => {\n  const partsRegex = /^(?<block>[a-zA-Z0-9\\\\-]+)(?<element>__[a-zA-Z0-9\\\\-]*)?(?<modifier>_[a-zA-Z0-9\\\\-]*)?(?<value>_[a-zA-Z0-9\\\\-]*)?$/;\n  const match = text.match(partsRegex);\n  if (match === null) {\n    return { block: \"\", element: \"\", modifier: \"\", value: \"\", unknown: text };\n  }\n  const parts = match.groups;\n  const plainParts = Object.assign({}, parts); // Make it serializable\n  keys.forEach((key) => {\n    plainParts[key] = plainParts[key] || \"\";\n  });\n  return plainParts;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setBemParts } from \"features/bemParts/bemPartsSlice\";\nimport ContentEditable from \"react-contenteditable\";\nimport { parseClass } from \"./parseClass\";\n\nconst generateSpans = (parts) => {\n  return [\n    `<span class=\"code code_unknown\">${parts.unknown || \"\"}</span>`,\n    `<span class=\"code code_block\">${parts.block || \"\"}</span>`,\n    `<span class=\"code code_element\">${parts.element || \"\"}</span>`,\n    `<span class=\"code code_modifier\">${parts.modifier || \"\"}</span>`,\n    `<span class=\"code code_value\">${parts.value || \"\"}</span>`,\n  ].join(\"\");\n};\n\nconst ColoredBemCode = ({ parts, setBemParts }) => {\n  const html = generateSpans(parts);\n  return (\n    <ContentEditable\n      className=\"editable-class-name\"\n      spellCheck=\"false\"\n      html={html}\n      onChange={(e) => {\n        const html = e.target.value;\n        const el = document.createElement(\"div\");\n        el.innerHTML = html;\n        const textContent = el.textContent;\n        setBemParts(parseClass(textContent));\n      }}\n    />\n  );\n};\n\nexport const ColoredBemHtmlExample = ({ parts }) => {\n  if (parts.unknown) {\n    debugger;\n    return <div></div>;\n  }\n  const mainParts = {\n    block: parts.block,\n    element: parts.element,\n  };\n  const allParts = {\n    block: parts.block,\n    element: parts.element,\n    modifier: parts.modifier,\n    value: parts.value,\n  };\n  const class1 = generateSpans(mainParts);\n  const class2 = generateSpans(allParts);\n  return (\n    <p className=\"code code-block\">\n      <span>&lt;div class=\"</span>\n      <span dangerouslySetInnerHTML={{ __html: class1 }}></span>\n      {class1 !== class2 ? (\n        <>\n          <span> </span>\n          <span dangerouslySetInnerHTML={{ __html: class2 }}></span>\n        </>\n      ) : null}\n      <span>\"&gt;</span>\n    </p>\n  );\n};\n\nconst mapDispatchToProps = {\n  setBemParts,\n};\n\nexport default connect(null, mapDispatchToProps)(ColoredBemCode);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setBemPart } from \"features/bemParts/bemPartsSlice\";\nimport classNames from \"classnames\";\n\nconst BemPartInput = ({ disabled, partName, value, setBemPart }) => {\n  return (\n    <div>\n      <input\n        className={classNames(\"code\", \"code_\" + partName)}\n        disabled={disabled}\n        value={value.replace(/_/g, \"\")}\n        onChange={(e) => setBemPart({ partName, value: e.target.value })}\n      ></input>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  setBemPart,\n};\n\nexport default connect(null, mapDispatchToProps)(BemPartInput);\n","import React from \"react\";\nimport ColoredBemCode, { ColoredBemHtmlExample } from \"./ColoredBemCode\";\nimport BemPartInput from \"./BemPartInput\";\n\nconst BemEditor = ({ bemParts }) => {\n  return (\n    <div className=\"bem-editor\">\n      <section className=\"bem-editor__part-inputs\">\n        <h2>BEM parts</h2>\n        <div className=\"bem-editor__input-list\">\n          <label className=\"bem-editor__input-row\">\n            Block:\n            <BemPartInput partName=\"block\" value={bemParts.block} />\n          </label>\n          <label className=\"bem-editor__input-row\">\n            Element:\n            <BemPartInput partName=\"element\" value={bemParts.element} />\n          </label>\n          <label className=\"bem-editor__input-row\">\n            Modifier:\n            <BemPartInput partName=\"modifier\" value={bemParts.modifier} />\n          </label>\n          <label className=\"bem-editor__input-row\">\n            Modifier value:\n            <BemPartInput partName=\"value\" value={bemParts.value} disabled={!bemParts.modifier} />\n          </label>\n        </div>\n      </section>\n      <section className=\"bem-editor__class-name\">\n        <h2>Class name</h2>\n        <ColoredBemCode parts={bemParts} />\n        {bemParts.unknown ? <div className=\"bem-editor__parse-error\">Invalid BEM pattern!</div> : null}\n      </section>\n      {!bemParts.unknown && bemParts.block ? (\n        <section className=\"bem-editor__html-example\">\n          <h2>Usage in HTML</h2>\n          <ColoredBemHtmlExample parts={bemParts} />\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default BemEditor;\n","import React from \"react\";\nimport BemEditor from \"./BemEditor\";\nimport { connect } from \"react-redux\";\n\nconst App = ({ bemParts }) => {\n  return <BemEditor bemParts={bemParts} />;\n};\n\nconst mapStateToProps = ({ bemParts }) => {\n  return { bemParts };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from \"redux\";\nimport bemPartsReducer from \"./features/bemParts/bemPartsSlice\";\n\nconst rootReducer = combineReducers({\n  bemParts: bemPartsReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport rootReducer from \"./reducers\";\nimport \"./index.css\";\n\nimport { setBemParts } from \"features/bemParts/bemPartsSlice\";\nimport { parseClass } from \"./components/parseClass\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nfunction updateFromHash() {\n  const initialBemParts = parseClass(window.location.hash.slice(1));\n  store.dispatch(setBemParts(initialBemParts));\n}\n\nwindow.addEventListener(\"hashchange\", updateFromHash, false);\nupdateFromHash();\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}